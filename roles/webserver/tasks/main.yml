---
# tasks file for roles/webserver

- name: Clone the repository
  ansible.builtin.git:
    repo: "{{ repository_url }}"
    dest: "{{ repository_folder_dest }}"
    version: "{{ repository_branch }}"
    force: yes
  environment:
    GIT_SSH_COMMAND: "ssh -i {{ repository_private_key }} -o StrictHostKeyChecking=no"
  register: webserver_clone_result

- name: Check if .env file exists
  ansible.builtin.stat:
    path: "{{ repository_folder_dest }}/.env"
  register: env_file_stat

- name: Generate a random password
  ansible.builtin.set_fact:
    random_password: "{{ range(12) | map('random', 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789') | join }}"
  register: random_password
  when: env_file_stat.stat.exists == false

- name: Create .env file
  ansible.builtin.copy:
    content: |
      # Mariadb environment
      MYSQL_ROOT_PASSWORD={{ random_password }}
      MYSQL_USER=sysadmin
      MYSQL_PASSWORD={{ random_password }}
      # Openlitespeed environment
      TimeZone=Asia/Jakarta
      DOMAIN=localhost
    dest: "{{ repository_folder_dest }}/.env"
  when: env_file_stat.stat.exists == false

- name: Run Docker Compose
  ansible.builtin.docker_compose:
    project_src: "{{ repository_folder_dest }}"
    project_name: "{{ repository_name }}"
    state: present
  register: webserver_compose_result

- name: 30 secs of delay added waiting for webserver up
  pause:
    seconds: 30
  when: webserver_compose_result.services.litespeed.webserver.state.status != "running"

- name: Check if the server is reachable
  uri:
    url: "http://{{ ansible_host }}:7080"
    method: GET
    return_content: no
  register: webserver_get_result
